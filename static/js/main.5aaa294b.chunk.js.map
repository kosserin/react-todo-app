{"version":3,"sources":["Todo.jsx","Todolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","toggleChange","handleDeleteTodo","className","type","name","id","checked","onChange","text","onClick","style","color","cursor","Todolist","todos","map","App","useState","setTodos","inputValueRef","useRef","focus","setFocus","numberOfCompleted","filter","length","LOCAL_STORAGE_KEY","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","e","preventDefault","ref","onFocus","current","value","prevTodos","uuidv4","newTodos","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aaa294b.chunk.js","sourcesContent":["import react from 'react';\n\nfunction Todo({todo, toggleChange, handleDeleteTodo}) {\n\n    function handleChange() {\n        toggleChange(todo.id);\n    }\n\n    function deleteTodo() {\n        handleDeleteTodo(todo.id)\n    }\n\n    return(\n        <div className='Todo'>\n            <div className=\"left-side\">\n            <input type=\"checkbox\" name=\"checkbox\" id={todo.id} checked={todo.checked} onChange={handleChange} />\n            <span>{todo.text}</span>\n            </div>\n            <span onClick={deleteTodo} style={{\n                color:'red',\n                cursor: 'pointer'\n            }}><i className='fas fa-times'></i></span>\n        </div>\n    )\n}\n\nexport default Todo;","import react from 'react';\nimport Todo from './Todo';\n\nfunction Todolist({todos, toggleChange, handleDeleteTodo}) {\n\n\n\n    return(\n        <div className='Todolist'>\n            {todos.map( todo => (\n                < Todo key={todo.id} todo={todo} toggleChange={toggleChange} handleDeleteTodo={handleDeleteTodo} />\n            ))}\n        </div>\n    )\n}\n\nexport default Todolist;","import React, {useState, useRef, useEffect} from \"react\";\nimport './App.css';\nimport Todolist from \"./Todolist\";\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n\n  const [todos,setTodos] = useState([]);\n  const inputValueRef = useRef();\n  const [focus,setFocus] = useState(false);\n  let numberOfCompleted = todos.filter( todo => todo.checked === true).length;\n    const LOCAL_STORAGE_KEY ='todoApp.todos';\n\n  useEffect(()=>{\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if(storedTodos) setTodos(storedTodos);\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  },[todos])\n\n  function showTodos(e){\n    const name = inputValueRef.current.value;\n    if(name===''){\n      return;\n    } else{\n      setTodos( prevTodos =>{\n        return [{text: name, id:uuidv4(), checked: false}, ...prevTodos]\n      })\n    }\n    inputValueRef.current.value = null;\n  }\n\n  function toggleChange(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find( todo => todo.id === id);\n    todo.checked = !todo.checked;\n    setTodos(newTodos);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n  }\n  \n  function removeCompletedTodos(id) {\n    const newTodos = todos.filter(todo => !todo.checked);\n    setTodos(newTodos);\n  }\n\n  function removeAllTodos() {\n    const newTodos = todos.filter(todo => todo.text='');\n    setTodos(newTodos);\n  }\n\n  function handleDeleteTodo(id){\n    const newTodos = [...todos];\n    const todo = newTodos.filter( todo => todo.id != id);\n    setTodos(todo)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>KOKI'S TODO</h1>\n      <form onSubmit={handleSubmit}>\n        <p  className={focus ? 'focused-input' : ''}>Enter your task here</p>\n        <input ref={inputValueRef} onFocus={() => setFocus(true)} type=\"text\" name=\"search-input\" id=\"search-input\" />\n        <button onClick={showTodos}>ADD</button>\n      </form>\n      < Todolist todos={todos} toggleChange={toggleChange} handleDeleteTodo={handleDeleteTodo} />\n      {numberOfCompleted > 0 ? (<div className='on-completed'><button onClick={removeCompletedTodos} className=\"removeCompleted\">remove completed</button>\n                      <p>There {numberOfCompleted === 1 ? 'is' : 'are'} <span>{numberOfCompleted}</span> completed todos you can remove. Click button above to delete.</p>\n                      </div>) : ''}\n\n      {todos.length>0 ? <button className='removeAllBtn' onClick={removeAllTodos}>remove all todos</button> : \"\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}